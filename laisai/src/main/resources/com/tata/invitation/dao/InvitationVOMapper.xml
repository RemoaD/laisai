<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tata.invitation.dao.InvitationVOMapper" >
  <resultMap id="BaseResultMap" type="com.tata.invitation.domain.InvitationVO" >
    <id column="invitationid" property="invitationid" jdbcType="INTEGER" />
    <result column="sendinviteid" property="sendinviteid" jdbcType="INTEGER" />
    <result column="receiveinviteid" property="receiveinviteid" jdbcType="INTEGER" />
    <result column="success" property="success" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    invitationid, sendinviteid, receiveinviteid, success, createtime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tata.invitation.domain.InvitationVOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from invitation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from invitation
    where invitationid = #{invitationid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from invitation
    where invitationid = #{invitationid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tata.invitation.domain.InvitationVOExample" >
    delete from invitation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tata.invitation.domain.InvitationVO" useGeneratedKeys="true" keyProperty="id" >
    insert into invitation (invitationid, sendinviteid, receiveinviteid, 
      success, createtime)
    values (#{invitationid,jdbcType=INTEGER}, #{sendinviteid,jdbcType=INTEGER}, #{receiveinviteid,jdbcType=INTEGER}, 
      #{success,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.tata.invitation.domain.InvitationVO" useGeneratedKeys="true" keyProperty="id" >
    insert into invitation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="invitationid != null" >
        invitationid,
      </if>
      <if test="sendinviteid != null" >
        sendinviteid,
      </if>
      <if test="receiveinviteid != null" >
        receiveinviteid,
      </if>
      <if test="success != null" >
        success,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="invitationid != null" >
        #{invitationid,jdbcType=INTEGER},
      </if>
      <if test="sendinviteid != null" >
        #{sendinviteid,jdbcType=INTEGER},
      </if>
      <if test="receiveinviteid != null" >
        #{receiveinviteid,jdbcType=INTEGER},
      </if>
      <if test="success != null" >
        #{success,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tata.invitation.domain.InvitationVOExample" resultType="java.lang.Integer" >
    select count(*) from invitation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update invitation
    <set >
      <if test="record.invitationid != null" >
        invitationid = #{record.invitationid,jdbcType=INTEGER},
      </if>
      <if test="record.sendinviteid != null" >
        sendinviteid = #{record.sendinviteid,jdbcType=INTEGER},
      </if>
      <if test="record.receiveinviteid != null" >
        receiveinviteid = #{record.receiveinviteid,jdbcType=INTEGER},
      </if>
      <if test="record.success != null" >
        success = #{record.success,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update invitation
    set invitationid = #{record.invitationid,jdbcType=INTEGER},
      sendinviteid = #{record.sendinviteid,jdbcType=INTEGER},
      receiveinviteid = #{record.receiveinviteid,jdbcType=INTEGER},
      success = #{record.success,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tata.invitation.domain.InvitationVO" >
    update invitation
    <set >
      <if test="sendinviteid != null" >
        sendinviteid = #{sendinviteid,jdbcType=INTEGER},
      </if>
      <if test="receiveinviteid != null" >
        receiveinviteid = #{receiveinviteid,jdbcType=INTEGER},
      </if>
      <if test="success != null" >
        success = #{success,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where invitationid = #{invitationid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tata.invitation.domain.InvitationVO" >
    update invitation
    set sendinviteid = #{sendinviteid,jdbcType=INTEGER},
      receiveinviteid = #{receiveinviteid,jdbcType=INTEGER},
      success = #{success,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where invitationid = #{invitationid,jdbcType=INTEGER}
  </update>
</mapper>