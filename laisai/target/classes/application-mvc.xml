<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-4.2.xsd 
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">
	<!-- 只扫描Controller注解的类 -->
	<context:component-scan base-package="com.tata"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 处理器适配器和处理器映射器 自动注册DefaultAnnotationHandlerMapping 与AnnotationMethodHandlerAdapter两个bean -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
				<!-- 通用json日期转换， @JsonFormat 优先级更高 -->
				<property name="objectMapper">
					<bean class="com.fasterxml.jackson.databind.ObjectMapper">
						<property name="dateFormat">
							<bean class="java.text.SimpleDateFormat">
								<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 默认的注解支持 -->
	<mvc:annotation-driven validator="validator"
		conversion-service="conversion-service" />
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!--不设置则默认为classpath下的 ValidationMessages.properties -->
		<property name="validationMessageSource" ref="validatemessageSource" />
	</bean>
	<bean id="conversion-service"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />
	<bean id="validatemessageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages" />
		
		<property name="useCodeAsDefaultMessage" value="false" />
	</bean>
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
		<property name="contentType" value="text/html; charset=utf-8" />
		<property name="cache" value="false" />
	</bean>
	<!-- 异常处理 -->
	  
	  <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Exception">error/500</prop>
                <prop key="java.lang.Throwable">error/500</prop>
            </props>
        </property>
        <property name="statusCodes">
            <props>
                <prop key="error/500">500</prop>
            </props>
        </property>
       
        <property name="warnLogCategory" value="WARN"></property>
       
        <property name="defaultErrorView" value="error/500"></property>
        
        <property name="defaultStatusCode" value="500"></property>
    </bean> 

	<mvc:interceptors>
		<!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
		<!-- 全局的拦截器 -->
		<bean class="com.tata.user.action.LogHandlerInterceptor"></bean>
		<bean class="com.tata.user.action.AuthHandlerInterceptor">
			<property name="allowURIs">
				<list>
					<value>/login.action</value>
					<value>/toregister.action</value>
					<value>/doregister.action</value>
					<value>/checklogin.action</value>
					<value>/loginlang.action</value>
					<value>/changeyzm.action</value>
					<value>/registerlang.action</value>
					<value>/getCode.action</value>
					<value>/index.action</value>
					<value>/register.action</value>
					<value>/forgetpassword.action</value>
					<value>/resetlang.action</value>
					<value>/doforgetpassword.action</value>
				</list>
			</property>
		</bean>
	</mvc:interceptors>
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<!-- 国际化信息所在的文件名 -->
		<property name="basename" value="messages" />
		<!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称 -->
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean>

	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="zh_CN"></property>
	</bean>
	
	<!-- <bean id="backupDatabaseJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
	     <property name="targetObject">  
	         <ref bean="mysqlService"/>  
	     </property>  
	     <property name="targetMethod">  
	         <value>BackMySQL</value>  
	     </property>  
	 </bean>  
	 定义触发时间     
	<bean id="backupDatabaseTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
	    <property name="jobDetail">  
	        <ref bean="backupDatabaseJobDetail"/>  
	    </property>  
	     cron表达式   
	    <property name="cronExpression">  
	        每隔90分钟备份一次  
	        <value>0 0/90 * * * ?</value>  
	    </property>  
	</bean>     
	总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序    
	<bean id="backupDatabaseScheduler" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
	     <property name="triggers">  
	         <list>  
	             <ref bean="backupDatabaseTrigger"/>  
	         </list>  
	     </property>  
	</bean>  -->
 

</beans>